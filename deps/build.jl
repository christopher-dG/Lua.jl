# TODO: Proper Lua install management.

using Libdl

# Compile and run a C program.
function runc(program::String)
    run(`gcc $program.c -o $program -I/usr/include/lua5.3 -llua5.3`)
    return readchomp(`./$program`)
end

# Ensure we're running Linux.
Sys.islinux() || error("Only Linux is supported")

# Check the installed Lua version.
v = try
    runc("lua_version")
catch
    ""
end
v == "503" || error("Lua version 5.3 is required")

# Get the Lua constants.
consts = runc("lua_consts")

# Get the shared library path. This is super gross.
liblua = ""
cmd = pipeline(`ldconfig -p`, `grep liblua`, `grep 5.3`)
for lib in map(line -> split(line)[end], split(readchomp(cmd), '\n'))
    if Libdl.dlopen_e(lib) != C_NULL
        global liblua = lib
        break
    end
end
isempty(liblua) && error("Couldn't find liblua")

# Write out the deps file.
write(
    joinpath(@__DIR__, "deps.jl"),
    "# This file is automatically generated, do not modify it.\n\n",
    """const liblua = "$liblua"\n\n""",
    consts, "\n",
)
